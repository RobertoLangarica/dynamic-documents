name: Backend-RELEASE deployment

# Trigger on push filter by branch
on:
  push:
    branches:
      - release_back
jobs:
  back_test:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      postgres:
        image: postgres:11.8
        env:
          POSTGRES_PASSWORD: admin
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Checkout last version
        uses: actions/checkout@v2
      
      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: Create test database
        working-directory: ./backend/test
        run: ./init_test_db.sh

      - name: Run tests
        working-directory: ./backend
        run: npm run test:e2e

  back_build:
    needs: back_test
    runs-on: ubuntu-latest
    env:
      SERVER: fid@68.183.171.182
      REMOTE_DIR: ~/dd/production
      BRANCH: release_back
      PROCESS_NAME: DD_production
    steps:
      - name: Checkout last version
        uses: actions/checkout@v2

      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        working-directory: ./backend
        run: npm ci
      - name: Build
        working-directory: ./backend
        run: npm run build

      - name: Adding SSH basics
        run: |
          eval `ssh-agent`
          ssh-add - <<< "${{secrets.DO_KEY}}"
          mkdir ~/.ssh
          echo > ~/.ssh/known_hosts
          ssh-keyscan 68.183.171.182 > ~/.ssh/known_hosts

      - name: Deleting last build on the remote server
        run: |
          eval `ssh-agent`
          ssh-add - <<< "${{secrets.DO_KEY}}"
          ssh "$SERVER" \
          "cd "$REMOTE_DIR"/backend && \
          yes | rm -r dist"
      - name: Sending new build to the remote server
        working-directory: ./backend
        run: |
          eval `ssh-agent`
          ssh-add - <<< "${{secrets.DO_KEY}}"
          scp -r ./dist "$SERVER":"$REMOTE_DIR"/backend/dist

      - name: Getting last repo version on the remote server
        run: |
          eval `ssh-agent`
          ssh-add - <<< "${{secrets.DO_KEY}}"
          ssh "$SERVER" \
          "cd "$REMOTE_DIR" && \
          git fetch && \
          git checkout origin/"$BRANCH""

      - name: Installing dependencies on remote server
        run: |
          eval `ssh-agent`
          ssh-add - <<< "${{secrets.DO_KEY}}"
          ssh "$SERVER" \
          "cd "$REMOTE_DIR"/backend && npm ci"

      - name: Run DB migrations
        run: |
          eval `ssh-agent`
          ssh-add - <<< "${{secrets.DO_KEY}}"
          ssh "$SERVER" \
          "cd "$REMOTE_DIR"/backend && npm run migration:run"
          
      - name: Restart pm2
        run: |
          eval `ssh-agent`
          ssh-add - <<< "${{secrets.DO_KEY}}"
          ssh "$SERVER" \
          "pm2 restart "$PROCESS_NAME""